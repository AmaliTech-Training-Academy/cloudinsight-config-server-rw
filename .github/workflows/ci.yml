name: Backend Service CI (No Tests)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: cloudinsight

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"
          cache: maven

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: |
          mvn clean compile -DskipTests=true \
            -Dmaven.javadoc.skip=true \
            -B -V

      - name: Package application
        run: |
          mvn package -DskipTests=true \
            -Dmaven.javadoc.skip=true \
            -B

      - name: Extract service name
        id: service
        run: |
          # Extract service name from repository name
          REPO_NAME="${{ github.repository }}"
          SERVICE_NAME=$(echo "$REPO_NAME" | sed 's/.*cloudinsight-\(.*\)-rw/\1/')
          echo "name=$SERVICE_NAME" >> $GITHUB_OUTPUT

      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_PREFIX }}-${{ steps.service.outputs.name }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build-service-discovery:
    needs: detect-changes
    if: needs.detect-changes.outputs.service-discovery == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"
          cache: maven

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-service-discovery-${{ hashFiles('service-discovery/**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-service-discovery-
            ${{ runner.os }}-maven-

      - name: Build with Maven
        working-directory: ./service-discovery
        run: |
          mvn clean compile -DskipTests=true \
            -Dmaven.javadoc.skip=true \
            -B -V

      - name: Package application
        working-directory: ./service-discovery
        run: |
          mvn package -DskipTests=true \
            -Dmaven.javadoc.skip=true \
            -B

      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_PREFIX }}-service-discovery
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v5
        with:
          context: ./service-discovery
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build-api-gateway:
    needs: detect-changes
    if: needs.detect-changes.outputs.api-gateway == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"
          cache: maven

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-api-gateway-${{ hashFiles('api-gateway/**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-api-gateway-
            ${{ runner.os }}-maven-

      - name: Build with Maven
        working-directory: ./api-gateway
        run: |
          mvn clean compile -DskipTests=true \
            -Dmaven.javadoc.skip=true \
            -B -V

      - name: Package application
        working-directory: ./api-gateway
        run: |
          mvn package -DskipTests=true \
            -Dmaven.javadoc.skip=true \
            -B

      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_PREFIX }}-api-gateway
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v5
        with:
          context: ./api-gateway
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  notify-success:
    needs:
      [
        detect-changes,
        build-config-server,
        build-service-discovery,
        build-api-gateway,
      ]
    if: always() && (needs.build-config-server.result == 'success' || needs.build-service-discovery.result == 'success' || needs.build-api-gateway.result == 'success')
    runs-on: ubuntu-latest

    steps:
      - name: Notify success
        run: |
          echo "âœ… Backend services CI completed successfully!"
          echo "Built services:"
          if [[ "${{ needs.detect-changes.outputs.config-server }}" == "true" ]]; then
            echo "  - Config Server: ${{ needs.build-config-server.result }}"
          fi
          if [[ "${{ needs.detect-changes.outputs.service-discovery }}" == "true" ]]; then
            echo "  - Service Discovery: ${{ needs.build-service-discovery.result }}"
          fi
          if [[ "${{ needs.detect-changes.outputs.api-gateway }}" == "true" ]]; then
            echo "  - API Gateway: ${{ needs.build-api-gateway.result }}"
          fi
